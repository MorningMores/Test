name: Frontend Tests

on:
  pull_request:
    branches:
      - main
      - dev
      - Dev-Jao-Frontend
      - FE-tester
    paths:
      - 'main_frontend/concert1/**'
    paths-ignore:
      - 'main_frontend/concert1/**.md'
  push:
    branches:
      - FE-tester
    paths:
      - 'main_frontend/concert1/**'
    paths-ignore:
      - 'main_frontend/concert1/**.md'

jobs:
  unit-tests:
    name: Unit Tests & Coverage
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: main_frontend/concert1/package-lock.json

      - name: Install dependencies
        working-directory: main_frontend/concert1
        run: npm ci

      - name: Run unit tests
        working-directory: main_frontend/concert1
        run: npm run test

      - name: Generate coverage report
        working-directory: main_frontend/concert1
        run: npm run test:coverage
        continue-on-error: true

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          files: ./main_frontend/concert1/coverage/lcov.info
          flags: frontend
          name: frontend-coverage
        continue-on-error: true

      - name: Check coverage thresholds
        working-directory: main_frontend/concert1
        run: npm run test:coverage

  lint:
    name: Code Quality
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: main_frontend/concert1/package-lock.json

      - name: Install dependencies
        working-directory: main_frontend/concert1
        run: npm ci

      - name: Type check
        working-directory: main_frontend/concert1
        run: npx nuxi typecheck
        continue-on-error: true

  e2e-tests:
    name: E2E Tests (Cypress)
    runs-on: ubuntu-latest
    needs: unit-tests
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: main_frontend/concert1/package-lock.json

      - name: Install dependencies
        working-directory: main_frontend/concert1
        run: npm ci

      - name: Start dev server
        working-directory: main_frontend/concert1
        run: |
          npm run dev &
          npx wait-on http://localhost:3000/concert --timeout 60000
        env:
          NODE_ENV: test

      - name: Run Cypress tests
        working-directory: main_frontend/concert1
        run: npm run test:e2e:headless
        continue-on-error: true

      - name: Upload Cypress screenshots
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: cypress-screenshots
          path: main_frontend/concert1/cypress/screenshots
          retention-days: 7

      - name: Upload Cypress videos
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: cypress-videos
          path: main_frontend/concert1/cypress/videos
          retention-days: 7

  test-summary:
    name: Test Summary
    runs-on: ubuntu-latest
    needs: [unit-tests, e2e-tests]
    if: always()
    
    steps:
      - name: Check test results
        run: |
          echo "Unit Tests: ${{ needs.unit-tests.result }}"
          echo "E2E Tests: ${{ needs.e2e-tests.result }}"
          
          if [ "${{ needs.unit-tests.result }}" != "success" ]; then
            echo "❌ Unit tests failed"
            exit 1
          fi
          
          if [ "${{ needs.e2e-tests.result }}" != "success" ]; then
            echo "⚠️  E2E tests had issues (non-blocking)"
          fi
          
          echo "✅ All critical tests passed"
